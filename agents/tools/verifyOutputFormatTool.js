import { tool } from "@langchain/core/tools";
import { z } from 'zod';

// Standalone function containing the core verification logic
const verifyOutputFormatLogic = async (response) => {
    // Implement the verification logic here.
    let isValid = true;
    let errorMessage = "";

    // Basic checks for required tags (expand as needed)
    if (!response.includes("<preliminary-checks>") || !response.includes("</preliminary-checks>")) {
        isValid = false;
        errorMessage += "Missing <preliminary-checks> tag. ";
    }
    if (!response.includes("<english-answer>") || !response.includes("</english-answer>")) {
        isValid = false;
        errorMessage += "Missing <english-answer> tag. ";
    }
    if (!response.includes("<citation-url>") || !response.includes("</citation-url>")) {
        isValid = false;
        errorMessage += "Missing <citation-url> tag. ";
    }
    // Add more checks as needed for other tags like <french-answer>, <context>, etc.

    if (isValid) {
        return "OK: Output format is valid."; // Return a success message
    } else {
        // Throw an error when verification fails, as is common for tools
        throw new Error(`Output format verification failed: ${errorMessage.trim()}`);
    }
};

// Define the LangChain tool using the 'tool' function
const verifyOutputFormat = tool(
    // The function the tool will execute. It receives the parsed input based on the schema.
    async ({ response }) => { // Destructure 'response' from the input object
        return await verifyOutputFormatLogic(response);
    },
    // Configuration object for the tool
    {
        name: "verifyOutputFormat",
        description: "Verifies that the agent's response string adheres to the required format, checking for all necessary tags (e.g., <preliminary-checks>, <english-answer>, <citation-url>). Throws an error if the format is invalid.",
        // Define the input schema using Zod for validation and description
        schema: z.object({
            response: z.string().describe("The complete response string generated by the agent that needs verification.")
        })
    }
);

// Export the configured tool
export default verifyOutputFormat;

